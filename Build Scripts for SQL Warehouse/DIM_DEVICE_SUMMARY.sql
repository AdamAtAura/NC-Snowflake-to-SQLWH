USE SNOWFLAKE
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIM_DEVICE_SUMMARY]') AND type in (N'U'))
DROP TABLE [dbo].[DIM_DEVICE_SUMMARY]
GO

SELECT * 
INTO DIM_DEVICE_SUMMARY
FROM OPENQUERY([NABLESNOWFLAKE], 'SELECT DEVICE_SK
	  ,TENANT_DK
	  ,DEVICE_DK
	  ,CUSTOMER_DK
	  ,DEVICE_ID
	  ,CAST(SUBSTRING(DEVICE_GUID,1,8000) AS CHAR(8000)) AS DEVICE_GUID
	  ,CUSTOMER_ID
	  ,CAST(SUBSTRING(DEVICE_NAME,1,8000) AS CHAR(8000)) AS DEVICE_NAME
	  ,CAST(SUBSTRING(DESCRIPTION,1,8000) AS CHAR(8000)) AS DESCRIPTION
	  ,CAST(SUBSTRING(DEVICE_CLASS,1,8000) AS CHAR(8000)) AS DEVICE_CLASS
	  ,CAST(SUBSTRING(GROUPED_DEVICE_CLASS,1,8000) AS CHAR(8000)) AS GROUPED_DEVICE_CLASS
	  ,CAST(SUBSTRING(NETWORK_MOBILE_SAAS,1,8000) AS CHAR(8000)) AS NETWORK_MOBILE_SAAS
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(PURCHASE_DATE)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(PURCHASE_DATE))
	   END AS PURCHASE_DATE
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(INSTALL_TIMESTAMP)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(INSTALL_TIMESTAMP))
	   END AS INSTALL_TIMESTAMP
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(LEASE_EXPIRY_DATE)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(LEASE_EXPIRY_DATE))
	   END AS LEASE_EXPIRY_DATE
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(EXPECTED_REPLACEMENT_DATE)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(EXPECTED_REPLACEMENT_DATE))
	   END AS EXPECTED_REPLACEMENT_DATE
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(WARRANTY_EXPIRY_DATE)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(WARRANTY_EXPIRY_DATE))
	   END AS WARRANTY_EXPIRY_DATE
	  ,DEVICE_COST
	  ,CAST(SUBSTRING(URI,1,8000) AS CHAR(8000)) AS URI
	  ,CAST(SUBSTRING(SOURCE_URI,1,8000) AS CHAR(8000)) AS SOURCE_URI
	  ,CAST(SUBSTRING(REMOTE_CONTROL_URI,1,8000) AS CHAR(8000)) AS REMOTE_CONTROL_URI
	  ,IS_ACTIVE
	  ,IS_MANAGED
	  ,IS_DYNAMIC_URI
	  ,IS_PROBE
	  ,IS_DISCOVERED_ASSET
	  ,IS_SYSTEM
	  ,IS_EXPLICITLY_UNMANAGED
	  ,CAST(SUBSTRING(DOMAIN,1,8000) AS CHAR(8000)) AS DOMAIN
	  ,CAST(SUBSTRING(MANUFACTURER,1,8000) AS CHAR(8000)) AS MANUFACTURER
	  ,CAST(SUBSTRING(MODEL_NUMBER,1,8000) AS CHAR(8000)) AS MODEL_NUMBER
	  ,CAST(SUBSTRING(NET_BIOS_NAME,1,8000) AS CHAR(8000)) AS NET_BIOS_NAME
	  ,POPULATED_MEMORY_SLOTS
	  ,CAST(SUBSTRING(SERIAL_NUMBER,1,8000) AS CHAR(8000)) AS SERIAL_NUMBER
	  ,CAST(SUBSTRING(SYSTEM_TYPE,1,8000) AS CHAR(8000)) AS SYSTEM_TYPE
	  ,TOTAL_MEMORY_BYTES
	  ,TOTAL_MEMORY_SLOTS
	  ,CAST(SUBSTRING(CPU_NAME,1,8000) AS CHAR(8000)) AS CPU_NAME
	  ,CAST(SUBSTRING(REPRESENTATIVE_CPU_DESCRIPTION,1,8000) AS CHAR(8000)) AS REPRESENTATIVE_CPU_DESCRIPTION
	  ,CPU_CORES_COUNT
	  ,CAST(SUBSTRING(OS_TYPE,1,8000) AS CHAR(8000)) AS OS_TYPE
	  ,CAST(SUBSTRING(OS_NAME,1,8000) AS CHAR(8000)) AS OS_NAME
	  ,CAST(SUBSTRING(OS_VERSION,1,8000) AS CHAR(8000)) AS OS_VERSION
	  ,CAST(SUBSTRING(APPLIANCE_NAME,1,8000) AS CHAR(8000)) AS APPLIANCE_NAME
	  ,CAST(SUBSTRING(APPLIANCE_TYPE,1,8000) AS CHAR(8000)) AS APPLIANCE_TYPE
	  ,CAST(SUBSTRING(APPLIANCE_VERSION,1,8000) AS CHAR(8000)) AS APPLIANCE_VERSION
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(APPLIANCE_CREATED)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(APPLIANCE_CREATED))
	   END AS APPLIANCE_CREATED
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(VALID_FROM)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(VALID_FROM))
	   END AS VALID_FROM
	  ,CASE 
		WHEN TRY_TO_TIMESTAMP(TO_VARCHAR(VALID_TO)) IS NULL THEN TO_TIMESTAMP(''1990-01-01 00:00:00.000'')
		ELSE TRY_TO_TIMESTAMP(TO_VARCHAR(VALID_TO))
	   END AS VALID_TO
	  ,CURRENT_FLAG
	FROM SHARED_ANALYTICS_DATA.SHARED_DATA.DIM_DEVICE_SUMMARY')
